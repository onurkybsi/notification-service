spring:
  application:
    name: "notification-service"
  r2dbc:
    url: "r2dbc:postgresql://${DB_HOST}:${DB_PORT}/notification_db"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
    pool:
      enabled: true
  kafka:
    bootstrap-servers: "${KAFKA_HOST1}:${KAFKA_PORT1}"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - beans
          - metrics
  defaults:
    metrics:
      export:
        enabled: false
  otlp:
    metrics:
      export:
        enabled: true
        url: "http://localhost:4318/v1/metrics"

springdoc:
  swagger-ui:
    enabled: true
    path: "/swagger-ui"

otel:
  sdk:
    disabled: true
  instrumentation:
    common:
      default-enabled: false
    spring-webflux:
      enabled: true
    r2dbc:
      enabled: true
    log4j-appender:
        enabled: true
  metrics:
    exporter: otlp

logging:
  level:
    org:
      springframework:
        r2dbc: "INFO"
      kybprototyping: "DEBUG"

scheduled:
  enabled: true
  pool-size: 2
  service-task:
    send-email:
      sender-address: "o.kayabasi@outlook.com"
      max-execution-count: 3
      template-not-found-backoff-hour: 24
      email-sender-failure-backoff-min: 2

ports:
  notification-template-repository:
    impl: "jooq"
  email-sender:
    impl: "jakarta"
    from: "o.kayabasi@outlook.com"
    smtp:
      host: "localhost"
      port: 1025
      auth: false
      starttls:
        enable: false
        required: false
      username: "username"
      password: "password"
  service-task-publisher:
    topic-names: { 'SEND_EMAIL': 'sent-email' }
